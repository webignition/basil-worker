name: Build Image

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # PR event.number
      # PR event.pull_request.created_at | tr -d '"'
      # release event.release.tag_name | tr -d '"'
      # release event.release.created_at | tr -d '"'
      - name: Set snapshot name
        id: snapshot_name
        run: |
          EVENT_NAME=${{ github.event_name }} \
          PR_NUMBER=${{ github.event.number }} \
          RELEASE_TAG_NAME=${{ github.event.release.tag_name }} \
          ./ci/create-snapshot-name.sh

      - name: Verify snapshot name
        run: echo ${{ steps.snapshot_name.outputs.value }}

      - name: Install packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer

      - name: Verify packer installation
        run: |
          packer --version
          if [ $? -ne 0 ]; then exit 1; fi; exit 0;

      - name: Verify image configuration
        run: |
          packer validate \
          -var 'digitalocean_api_token=${{ secrets.DIGITALOCEAN_API_TOKEN }}' \
          -var 'snapshot_name=${{ steps.snapshot_name.outputs.value }}' \
          image.json
#
#      - name: Create image
#        run: |
#          packer build -var 'digitalocean_api_token=${{ secrets.DIGITALOCEAN_API_TOKEN }}' image.json | tee packer.log
#          ID=$(cat packer.log | tail -1 | grep -P -o 'ID: \d+' | tr -d 'ID: ')
#          ./ci/verify-snapshot-exists.sh $ID ${{ secrets.DIGITALOCEAN_API_TOKEN }}
#          if [ $? -ne 0 ]; then exit 1; fi; exit 0;
#
#      - name: Remove created image
#        run: |
#          ID=$(cat packer.log | tail -1 | grep -P -o 'ID: \d+' | tr -d 'ID: ')
#          ./ci/delete-snapshot.sh $ID ${{ secrets.DIGITALOCEAN_API_TOKEN }}
#          ./ci/verify-snapshot-not-exists.sh $ID ${{ secrets.DIGITALOCEAN_API_TOKEN }}
#          if [ $? -ne 0 ]; then exit 1; fi; exit 0;
